/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from "react";
import {
  Box,
  Button,
  CircularProgress,
  Link as MUILink,
  Skeleton,
} from "@mui/material";
import Card1Image from "src/assets/images/2Portal_Card_1.png";
import VectorImage from "src/assets/images/2Portal_Vector.png";
import Vector1Image from "src/assets/images/2Portal_Vector_1.png";
import Vector2Image from "src/assets/images/2Portal_Vector_2.png";
import Vector3Image from "src/assets/images/2Portal_Vector_3.png";
import Vector4Image from "src/assets/images/2Portal_Vector_4.png";
import Vector5Image from "src/assets/images/2Portal_Vector_5.png";
import Vector6Image from "src/assets/images/2Portal_Vector_6.png";
import Vector7Image from "src/assets/images/2Portal_Vector_7.png";
import Vector8Image from "src/assets/images/2Portal_Vector_8.png";
import { styled } from "@mui/material/styles";
import BannerTop from "src/components/BannerTop/BannerTop";
import Footer1 from "src/components/Footer1/Footer1";
import { Q2PortalProps } from "src/types";
import useQ2Portal from "src/components/Q2Portal/useQ2Portal";

const ScreenDesktop: any = styled("div")(({ theme }: any) => ({
  backgroundColor: theme.palette["Other"]["Divider"],
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: "100%",
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: "auto",
}));

const BannerTop1: any = styled(BannerTop)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Banner: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.currentVariant === "ScreenMobile" ? `10px` : `10px 70px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `11px 0px 0px 0px`,
  overflow: `hidden`,
}));

const CardChoreo: any = styled("div")(({ theme }: any) => ({
  backgroundColor: theme.palette["Background"]["Background"],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `10px 0px`,
  flex: `1`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Content: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === "ScreenMobile" ? `column` : `row`,
  justifyContent:
    data.currentVariant === "ScreenMobile" ? `center` : `flex-start`,
  alignItems: data.currentVariant === "ScreenMobile" ? `flex-start` : `center`,
  padding: `20px 20px 20px 30px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === "ScreenMobile" ? "unset" : `stretch`,
  flex: `1`,
  margin: `0px`,
}));

const Card1: any = styled("img")({
  height: `109.82px`,
  width: `188px`,
  margin: `0px`,
});

const Details: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === "ScreenMobile" ? `column` : `row`,
  justifyContent:
    data.currentVariant === "ScreenMobile" ? `flex-start` : `space-between`,
  alignItems: data.currentVariant === "ScreenMobile" ? `flex-end` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: data.currentVariant === "ScreenMobile" ? "unset" : `1`,
  margin:
    data.currentVariant === "ScreenMobile"
      ? `34px 0px 0px 0px`
      : `0px 0px 0px 34px`,
}));

const Top: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: data.currentVariant === "ScreenMobile" ? "unset" : `1`,
  margin: `0px`,
  alignSelf: data.currentVariant === "ScreenMobile" ? `stretch` : "unset",
}));

const Text: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TitleTop: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,
  fontSize: theme.typography["Typography"]["H5"].fontSize,
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,
  textTransform: theme.typography["Typography"]["H5"].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Points: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `19px 0px 0px 0px`,
});

const AvailablePoints: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Details1: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H4"].fontStyle,
  fontFamily: theme.typography["Typography"]["H4"].fontFamily,
  fontWeight: theme.typography["Typography"]["H4"].fontWeight,
  fontSize: theme.typography["Typography"]["H4"].fontSize,
  letterSpacing: theme.typography["Typography"]["H4"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H4"].lineHeight,
  textDecoration: theme.typography["Typography"]["H4"].textDecoration,
  textTransform: theme.typography["Typography"]["H4"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Details2: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Frame4: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: data.currentVariant === "ScreenMobile" ? `28px 0px 0px 0px` : `0px`,
}));

const ButtonText: any = styled(Button, {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette["Primary"]["Main"],
  fontStyle: theme.typography["Components"]["Button Font - Large"].fontStyle,
  fontFamily: theme.typography["Components"]["Button Font - Large"].fontFamily,
  fontWeight: theme.typography["Components"]["Button Font - Large"].fontWeight,
  fontSize: theme.typography["Components"]["Button Font - Large"].fontSize,
  letterSpacing:
    theme.typography["Components"]["Button Font - Large"].letterSpacing,
  lineHeight: theme.typography["Components"]["Button Font - Large"].lineHeight,
  textDecoration:
    theme.typography["Components"]["Button Font - Large"].textDecoration,
  textTransform:
    theme.typography["Components"]["Button Font - Large"].textTransform,
}));

const Banner1: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.currentVariant === "ScreenMobile" ? `10px` : `10px 70px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `11px 0px 0px 0px`,
  overflow: `hidden`,
}));

const CardChoreo1: any = styled("div")(({ theme }: any) => ({
  backgroundColor: theme.palette["Background"]["Background"],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `10px 0px`,
  flex: `1`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Content1: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `20px 30px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Details3: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const BalanaceBanner: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  backgroundColor: theme.palette["Other"]["Divider"],
  borderRadius: `14px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === "ScreenMobile" ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 12px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Vector: any = styled("img")({
  height: `40px`,
  width: `40px`,
  margin: `0px`,
});

const Txt: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  width: data.currentVariant === "ScreenMobile" ? "unset" : `832px`,
  margin:
    data.currentVariant === "ScreenMobile"
      ? `16px 0px 0px 0px`
      : `0px 0px 0px 16px`,
}));

const Details4: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  flex: data.currentVariant === "ScreenMobile" ? "unset" : `1`,
  margin: `0px`,
}));

const Details5: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Secondary"],
  fontStyle: theme.typography["Typography"]["Body 3"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 3"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 3"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 3"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 3"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 3"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 3"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 3"].textTransform,
  alignSelf: `stretch`,
  flex: data.currentVariant === "ScreenMobile" ? "unset" : `1`,
  margin: `6px 0px 0px 0px`,
}));

const Top1: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === "ScreenMobile" ? `column` : `row`,
  justifyContent:
    data.currentVariant === "ScreenMobile" ? `flex-end` : `flex-start`,
  alignItems:
    data.currentVariant === "ScreenMobile" ? `flex-start` : `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
}));

const Text1: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: data.currentVariant === "ScreenMobile" ? "unset" : `1`,
  margin: `0px`,
  alignSelf: data.currentVariant === "ScreenMobile" ? `stretch` : "unset",
}));

const Card: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const CardNumber: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H6"].fontStyle,
  fontFamily: theme.typography["Typography"]["H6"].fontFamily,
  fontWeight: theme.typography["Typography"]["H6"].fontWeight,
  fontSize: theme.typography["Typography"]["H6"].fontSize,
  letterSpacing: theme.typography["Typography"]["H6"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H6"].lineHeight,
  textDecoration: theme.typography["Typography"]["H6"].textDecoration,
  textTransform: theme.typography["Typography"]["H6"].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Balance: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `19px 0px 0px 0px`,
});

const BalanceDetails: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `242px`,
  margin: `0px`,
});

const Details6: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H4"].fontStyle,
  fontFamily: theme.typography["Typography"]["H4"].fontFamily,
  fontWeight: theme.typography["Typography"]["H4"].fontWeight,
  fontSize: theme.typography["Typography"]["H4"].fontSize,
  letterSpacing: theme.typography["Typography"]["H4"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H4"].lineHeight,
  textDecoration: theme.typography["Typography"]["H4"].textDecoration,
  textTransform: theme.typography["Typography"]["H4"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Details7: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Link1: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `4px 0px 0px 0px`,
  color: theme.palette["Primary"]["Main"],
  fontStyle: theme.typography["Typography"]["Body 2 Link"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2 Link"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2 Link"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2 Link"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2 Link"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2 Link"].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography["Typography"]["Body 2 Link"].textTransform,
}));

const Text2: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: data.currentVariant === "ScreenMobile" ? "unset" : `1`,
  margin:
    data.currentVariant === "ScreenMobile"
      ? `-2px 0px 0px 0px`
      : `0px 0px 0px 28px`,
  alignSelf: data.currentVariant === "ScreenMobile" ? `stretch` : "unset",
}));

const Card2: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `27px`,
  margin: `0px`,
});

const Balance1: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `19px 0px 0px 0px`,
});

const BalanceDetails1: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: data.currentVariant === "ScreenMobile" ? "unset" : `242px`,
  margin: `0px`,
  flex: data.currentVariant === "ScreenMobile" ? `1` : "unset",
}));

const Details8: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,
  fontSize: theme.typography["Typography"]["H5"].fontSize,
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,
  textTransform: theme.typography["Typography"]["H5"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Details9: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Text3: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: data.currentVariant === "ScreenMobile" ? "unset" : `1`,
  margin:
    data.currentVariant === "ScreenMobile"
      ? `-2px 0px 0px 0px`
      : `0px 0px 0px 28px`,
  alignSelf: data.currentVariant === "ScreenMobile" ? `stretch` : "unset",
}));

const Card3: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `27px`,
  margin: `0px`,
});

const Balance2: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `19px 0px 0px 0px`,
});

const BalanceDetails2: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: data.currentVariant === "ScreenMobile" ? "unset" : `242px`,
  margin: `0px`,
  flex: data.currentVariant === "ScreenMobile" ? `1` : "unset",
}));

const Details10: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,
  fontSize: theme.typography["Typography"]["H5"].fontSize,
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,
  textTransform: theme.typography["Typography"]["H5"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Details11: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Frame41: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `28px 0px 0px 0px`,
});

const ButtonOutlined: any = styled(Button, {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette["Primary"]["Main"],
  fontStyle: theme.typography["Components"]["Button Font - Large"].fontStyle,
  fontFamily: theme.typography["Components"]["Button Font - Large"].fontFamily,
  fontWeight: theme.typography["Components"]["Button Font - Large"].fontWeight,
  fontSize: theme.typography["Components"]["Button Font - Large"].fontSize,
  letterSpacing:
    theme.typography["Components"]["Button Font - Large"].letterSpacing,
  lineHeight: theme.typography["Components"]["Button Font - Large"].lineHeight,
  textDecoration:
    theme.typography["Components"]["Button Font - Large"].textDecoration,
  textTransform:
    theme.typography["Components"]["Button Font - Large"].textTransform,
}));

const Cards2X2: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === "ScreenMobile"
      ? `10px 70px`
      : `10px 70px 100px 70px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `11px 0px 0px 0px`,
  overflow: `hidden`,
}));

const CardRow1: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const CardChoreo2: any = styled("div")(({ theme }: any) => ({
  backgroundColor: theme.palette["Background"]["Background"],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 0px 4px 0px`,
  flex: `1`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Content2: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 20px 20px 30px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `286px`,
  margin: `0px`,
});

const Details12: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `space-between`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Top2: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Icon1: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `50px`,
  width: `50px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Vector1: any = styled("img")({
  height: `37.5px`,
  width: `33.33px`,
  position: `absolute`,
  left: `8px`,
  top: `6px`,
});

const Text4: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const TitleTop1: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title1: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,
  fontSize: theme.typography["Typography"]["H5"].fontSize,
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,
  textTransform: theme.typography["Typography"]["H5"].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Frame5: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Details13: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame42: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonText1: any = styled(Button, {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette["Primary"]["Main"],
  fontStyle: theme.typography["Components"]["Button Font - Large"].fontStyle,
  fontFamily: theme.typography["Components"]["Button Font - Large"].fontFamily,
  fontWeight: theme.typography["Components"]["Button Font - Large"].fontWeight,
  fontSize: theme.typography["Components"]["Button Font - Large"].fontSize,
  letterSpacing:
    theme.typography["Components"]["Button Font - Large"].letterSpacing,
  lineHeight: theme.typography["Components"]["Button Font - Large"].lineHeight,
  textDecoration:
    theme.typography["Components"]["Button Font - Large"].textDecoration,
  textTransform:
    theme.typography["Components"]["Button Font - Large"].textTransform,
}));

const CardChoreo3: any = styled("div")(({ theme }: any) => ({
  backgroundColor: theme.palette["Background"]["Background"],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 0px 4px 0px`,
  flex: `1`,
  margin: `0px 0px 0px 10px`,
  overflow: `hidden`,
}));

const Content3: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 20px 20px 30px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `286px`,
  margin: `0px`,
});

const Details14: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `space-between`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Top3: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Icon2: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `50px`,
  width: `50px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Vector2: any = styled("img")({
  height: `40px`,
  width: `40px`,
  position: `absolute`,
  left: `2px`,
  top: `2px`,
});

const Text5: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const TitleTop2: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title2: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,
  fontSize: theme.typography["Typography"]["H5"].fontSize,
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,
  textTransform: theme.typography["Typography"]["H5"].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Frame51: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Details15: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame43: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonText2: any = styled(Button, {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette["Primary"]["Main"],
  fontStyle: theme.typography["Components"]["Button Font - Large"].fontStyle,
  fontFamily: theme.typography["Components"]["Button Font - Large"].fontFamily,
  fontWeight: theme.typography["Components"]["Button Font - Large"].fontWeight,
  fontSize: theme.typography["Components"]["Button Font - Large"].fontSize,
  letterSpacing:
    theme.typography["Components"]["Button Font - Large"].letterSpacing,
  lineHeight: theme.typography["Components"]["Button Font - Large"].lineHeight,
  textDecoration:
    theme.typography["Components"]["Button Font - Large"].textDecoration,
  textTransform:
    theme.typography["Components"]["Button Font - Large"].textTransform,
}));

const CardRow2: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `10px 0px 0px 0px`,
});

const CardChoreo4: any = styled("div")(({ theme }: any) => ({
  backgroundColor: theme.palette["Background"]["Background"],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 0px 4px 0px`,
  flex: `1`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Content4: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 20px 20px 30px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `286px`,
  margin: `0px`,
});

const Details16: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `space-between`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Top4: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Icon3: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `50px`,
  width: `50px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Vector3: any = styled("img")({
  height: `32px`,
  width: `40px`,
  position: `absolute`,
  left: `2px`,
  top: `10px`,
});

const Text6: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const TitleTop3: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title3: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,
  fontSize: theme.typography["Typography"]["H5"].fontSize,
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,
  textTransform: theme.typography["Typography"]["H5"].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Frame52: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Details17: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame44: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonText3: any = styled(Button, {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette["Primary"]["Main"],
  fontStyle: theme.typography["Components"]["Button Font - Large"].fontStyle,
  fontFamily: theme.typography["Components"]["Button Font - Large"].fontFamily,
  fontWeight: theme.typography["Components"]["Button Font - Large"].fontWeight,
  fontSize: theme.typography["Components"]["Button Font - Large"].fontSize,
  letterSpacing:
    theme.typography["Components"]["Button Font - Large"].letterSpacing,
  lineHeight: theme.typography["Components"]["Button Font - Large"].lineHeight,
  textDecoration:
    theme.typography["Components"]["Button Font - Large"].textDecoration,
  textTransform:
    theme.typography["Components"]["Button Font - Large"].textTransform,
}));

const CardChoreo5: any = styled("div")(({ theme }: any) => ({
  backgroundColor: theme.palette["Background"]["Background"],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 0px 4px 0px`,
  flex: `1`,
  margin: `0px 0px 0px 10px`,
  overflow: `hidden`,
}));

const Content5: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 20px 20px 30px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `286px`,
  margin: `0px`,
});

const Details18: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `space-between`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Top5: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Icon4: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `50px`,
  width: `50px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Vector4: any = styled("img")({
  height: `40px`,
  width: `40px`,
  position: `absolute`,
  left: `4px`,
  top: `4px`,
});

const Text7: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const TitleTop4: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title4: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,
  fontSize: theme.typography["Typography"]["H5"].fontSize,
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,
  textTransform: theme.typography["Typography"]["H5"].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Frame53: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Details19: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame45: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonText4: any = styled(Button, {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette["Primary"]["Main"],
  fontStyle: theme.typography["Components"]["Button Font - Large"].fontStyle,
  fontFamily: theme.typography["Components"]["Button Font - Large"].fontFamily,
  fontWeight: theme.typography["Components"]["Button Font - Large"].fontWeight,
  fontSize: theme.typography["Components"]["Button Font - Large"].fontSize,
  letterSpacing:
    theme.typography["Components"]["Button Font - Large"].letterSpacing,
  lineHeight: theme.typography["Components"]["Button Font - Large"].lineHeight,
  textDecoration:
    theme.typography["Components"]["Button Font - Large"].textDecoration,
  textTransform:
    theme.typography["Components"]["Button Font - Large"].textTransform,
}));

const Cards1X4: any = styled("div", {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === "ScreenMobile" ? `10px 10px 100px 10px` : `10px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `11px 0px 0px 0px`,
  overflow: `hidden`,
}));

const CardChoreo6: any = styled("div")(({ theme }: any) => ({
  backgroundColor: theme.palette["Background"]["Background"],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 0px 4px 0px`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Content6: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 20px 20px 30px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `286px`,
  margin: `0px`,
});

const Details20: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `space-between`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Top6: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Icon5: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `50px`,
  width: `50px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Vector5: any = styled("img")({
  height: `37.5px`,
  width: `33.33px`,
  position: `absolute`,
  left: `8px`,
  top: `6px`,
});

const Text8: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const TitleTop5: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title5: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,
  fontSize: theme.typography["Typography"]["H5"].fontSize,
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,
  textTransform: theme.typography["Typography"]["H5"].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Frame54: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Details21: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame46: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonText5: any = styled(Button, {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette["Primary"]["Main"],
  fontStyle: theme.typography["Components"]["Button Font - Large"].fontStyle,
  fontFamily: theme.typography["Components"]["Button Font - Large"].fontFamily,
  fontWeight: theme.typography["Components"]["Button Font - Large"].fontWeight,
  fontSize: theme.typography["Components"]["Button Font - Large"].fontSize,
  letterSpacing:
    theme.typography["Components"]["Button Font - Large"].letterSpacing,
  lineHeight: theme.typography["Components"]["Button Font - Large"].lineHeight,
  textDecoration:
    theme.typography["Components"]["Button Font - Large"].textDecoration,
  textTransform:
    theme.typography["Components"]["Button Font - Large"].textTransform,
}));

const CardChoreo7: any = styled("div")(({ theme }: any) => ({
  backgroundColor: theme.palette["Background"]["Background"],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 0px 4px 0px`,
  alignSelf: `stretch`,
  margin: `10px 0px 0px 0px`,
  overflow: `hidden`,
}));

const Content7: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 20px 20px 30px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `286px`,
  margin: `0px`,
});

const Details22: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `space-between`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Top7: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Icon6: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `50px`,
  width: `50px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Vector6: any = styled("img")({
  height: `40px`,
  width: `40px`,
  position: `absolute`,
  left: `2px`,
  top: `2px`,
});

const Text9: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const TitleTop6: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title6: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,
  fontSize: theme.typography["Typography"]["H5"].fontSize,
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,
  textTransform: theme.typography["Typography"]["H5"].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Frame55: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Details23: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame47: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonText6: any = styled(Button, {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette["Primary"]["Main"],
  fontStyle: theme.typography["Components"]["Button Font - Large"].fontStyle,
  fontFamily: theme.typography["Components"]["Button Font - Large"].fontFamily,
  fontWeight: theme.typography["Components"]["Button Font - Large"].fontWeight,
  fontSize: theme.typography["Components"]["Button Font - Large"].fontSize,
  letterSpacing:
    theme.typography["Components"]["Button Font - Large"].letterSpacing,
  lineHeight: theme.typography["Components"]["Button Font - Large"].lineHeight,
  textDecoration:
    theme.typography["Components"]["Button Font - Large"].textDecoration,
  textTransform:
    theme.typography["Components"]["Button Font - Large"].textTransform,
}));

const CardChoreo8: any = styled("div")(({ theme }: any) => ({
  backgroundColor: theme.palette["Background"]["Background"],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 0px 4px 0px`,
  alignSelf: `stretch`,
  margin: `10px 0px 0px 0px`,
  overflow: `hidden`,
}));

const Content8: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 20px 20px 30px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `286px`,
  margin: `0px`,
});

const Details24: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `space-between`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Top8: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Icon7: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `50px`,
  width: `50px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Vector7: any = styled("img")({
  height: `32px`,
  width: `40px`,
  position: `absolute`,
  left: `2px`,
  top: `10px`,
});

const Text10: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const TitleTop7: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title7: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,
  fontSize: theme.typography["Typography"]["H5"].fontSize,
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,
  textTransform: theme.typography["Typography"]["H5"].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Frame56: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Details25: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame48: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonText7: any = styled(Button, {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette["Primary"]["Main"],
  fontStyle: theme.typography["Components"]["Button Font - Large"].fontStyle,
  fontFamily: theme.typography["Components"]["Button Font - Large"].fontFamily,
  fontWeight: theme.typography["Components"]["Button Font - Large"].fontWeight,
  fontSize: theme.typography["Components"]["Button Font - Large"].fontSize,
  letterSpacing:
    theme.typography["Components"]["Button Font - Large"].letterSpacing,
  lineHeight: theme.typography["Components"]["Button Font - Large"].lineHeight,
  textDecoration:
    theme.typography["Components"]["Button Font - Large"].textDecoration,
  textTransform:
    theme.typography["Components"]["Button Font - Large"].textTransform,
}));

const CardChoreo9: any = styled("div")(({ theme }: any) => ({
  backgroundColor: theme.palette["Background"]["Background"],
  border: `1px solid rgba(176, 176, 176, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px 0px 4px 0px`,
  alignSelf: `stretch`,
  margin: `10px 0px 0px 0px`,
  overflow: `hidden`,
}));

const Content9: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `20px 20px 20px 30px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `286px`,
  margin: `0px`,
});

const Details26: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `space-between`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Top9: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Icon8: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `50px`,
  width: `50px`,
  margin: `0px`,
  overflow: `hidden`,
});

const Vector8: any = styled("img")({
  height: `40px`,
  width: `40px`,
  position: `absolute`,
  left: `4px`,
  top: `4px`,
});

const Text11: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const TitleTop8: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Title8: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["H5"].fontStyle,
  fontFamily: theme.typography["Typography"]["H5"].fontFamily,
  fontWeight: theme.typography["Typography"]["H5"].fontWeight,
  fontSize: theme.typography["Typography"]["H5"].fontSize,
  letterSpacing: theme.typography["Typography"]["H5"].letterSpacing,
  lineHeight: theme.typography["Typography"]["H5"].lineHeight,
  textDecoration: theme.typography["Typography"]["H5"].textDecoration,
  textTransform: theme.typography["Typography"]["H5"].textTransform,
  flex: `1`,
  margin: `0px`,
}));

const Frame57: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `12px 0px 0px 0px`,
});

const Details27: any = styled("div")(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: theme.typography["Typography"]["Body 2"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 2"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 2"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 2"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 2"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 2"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 2"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 2"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame49: any = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonText8: any = styled(Button, {
  shouldForwardProp: (prop: any) => !["data"].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette["Primary"]["Main"],
  fontStyle: theme.typography["Components"]["Button Font - Large"].fontStyle,
  fontFamily: theme.typography["Components"]["Button Font - Large"].fontFamily,
  fontWeight: theme.typography["Components"]["Button Font - Large"].fontWeight,
  fontSize: theme.typography["Components"]["Button Font - Large"].fontSize,
  letterSpacing:
    theme.typography["Components"]["Button Font - Large"].letterSpacing,
  lineHeight: theme.typography["Components"]["Button Font - Large"].lineHeight,
  textDecoration:
    theme.typography["Components"]["Button Font - Large"].textDecoration,
  textTransform:
    theme.typography["Components"]["Button Font - Large"].textTransform,
}));

const Footer11: any = styled(Footer1)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `11px 0px 0px 0px`,
}));

function Q2Portal(props: Q2PortalProps): JSX.Element {
  const { data, fns } = useQ2Portal();

  if (data.isAuthLoading) {
    return (
      <Box
        display="flex"
        height="100vh"
        alignItems="center"
        justifyContent="center"
      >
        <CircularProgress />
      </Box>
    );
  }

  return (
    <ScreenDesktop className={props.className}>
      <BannerTop1 />
      <Banner data={data}>
        {data.isCardDetailsLoading ? (
          <Skeleton
            variant="rounded"
            sx={{ width: "1588px", height: "172px" }}
          />
        ) : (
          <CardChoreo>
            <Content data={data}>
              <Card1 src={Card1Image} loading="lazy" alt={"Card 1"} />
              <Details data={data}>
                <Top data={data}>
                  <Text>
                    <TitleTop>
                      <Title>{`Horizon Loyalty Rewards`}</Title>
                    </TitleTop>
                    <Points>
                      <AvailablePoints>
                        <Details1>{data.cardDetails?.rewardPoints}</Details1>
                        <Details2>{`Available Points`}</Details2>
                      </AvailablePoints>
                    </Points>
                  </Text>
                </Top>
                <Frame4 data={data}>
                  <ButtonText
                    variant="text"
                    size={"large"}
                    color={"primary"}
                    disabled={false}
                    onClick={() => {
                      fns.onRedeemPoints();
                    }}
                    data={data}
                  >
                    {"REDEEM POINTS"}
                  </ButtonText>
                </Frame4>
              </Details>
            </Content>
          </CardChoreo>
        )}
      </Banner>
      <Banner1 data={data}>
        {data.isCardDetailsLoading ? (
          <Skeleton
            variant="rounded"
            sx={{ width: "1588px", height: "364px" }}
          />
        ) : (
          <CardChoreo1>
            <Content1>
              <Details3>
                <BalanaceBanner data={data}>
                  <Vector src={VectorImage} loading="lazy" alt={"Vector"} />
                  <Txt data={data}>
                    <Details4 data={data}>
                      {`You do not have a payment due right now.`}
                    </Details4>
                    <Details5 data={data}>
                      {`Your next statement period ends Nov 19, 2023`}
                    </Details5>
                  </Txt>
                </BalanaceBanner>
                <Top1 data={data}>
                  <Text1 data={data}>
                    <Card>
                      <CardNumber>{`CREDIT CARD (...${
                        data.cardDetails?.cardNumber.toString().slice(-4) ||
                        'XXXX'
                      })`}</CardNumber>
                    </Card>
                    <Balance>
                      <BalanceDetails>
                        <Details6>{`$${
                          data.cardDetails?.currentBalance || '0.0'
                        }`}</Details6>
                        <Details7>{`Current Balance`}</Details7>
                        <Link1
                          color={"primary"}
                          disabled={false}
                          underline={"always"}
                          data={data}
                        >
                          {"Balance Details"}
                        </Link1>
                      </BalanceDetails>
                    </Balance>
                  </Text1>
                  <Text2 data={data}>
                    <Card2></Card2>
                    <Balance1>
                      <BalanceDetails1 data={data}>
                        <Details8>{`$${
                          data.cardDetails?.lastStatementBalance || '0.0'
                        }`}</Details8>
                        <Details9>{`Last statement balance`}</Details9>
                      </BalanceDetails1>
                    </Balance1>
                  </Text2>
                  <Text3 data={data}>
                    <Card3></Card3>
                    <Balance2>
                      <BalanceDetails2 data={data}>
                        <Details10>{`$${
                          data.cardDetails?.availableCredit || '0.0'
                        }`}</Details10>
                        <Details11>{`Available credit`}</Details11>
                      </BalanceDetails2>
                    </Balance2>
                  </Text3>
                </Top1>
                <Frame41>
                  <ButtonOutlined
                    variant="outlined"
                    size={"large"}
                    color={"primary"}
                    disabled={false}
                    data={data}
                  >
                    {"PAY CARD"}
                  </ButtonOutlined>
                </Frame41>
              </Details3>
            </Content1>
          </CardChoreo1>
        )}
      </Banner1>

      {!(data.currentVariant === "ScreenMobile") && (
        <Cards2X2 data={data}>
          <CardRow1>
            <CardChoreo2>
              <Content2>
                <Details12>
                  <Top2>
                    <Icon1>
                      <Vector1
                        src={Vector1Image}
                        loading="lazy"
                        alt={"Vector"}
                      />
                    </Icon1>
                    <Text4>
                      <TitleTop1>
                        <Title1>{`Find mortgage happiness`}</Title1>
                      </TitleTop1>
                      <Frame5>
                        <Details13>
                          {`With a down payment as low as 3%`}
                        </Details13>
                      </Frame5>
                    </Text4>
                  </Top2>
                  <Frame42>
                    <ButtonText1
                      variant="text"
                      size={"large"}
                      color={"primary"}
                      disabled={false}
                      data={data}
                    >
                      {"LEARN MORE"}
                    </ButtonText1>
                  </Frame42>
                </Details12>
              </Content2>
            </CardChoreo2>
            <CardChoreo3>
              <Content3>
                <Details14>
                  <Top3>
                    <Icon2>
                      <Vector2
                        src={Vector2Image}
                        loading="lazy"
                        alt={"Vector"}
                      />
                    </Icon2>
                    <Text5>
                      <TitleTop2>
                        <Title2>
                          {`Find the account that’s right for you`}
                        </Title2>
                      </TitleTop2>
                      <Frame51>
                        <Details15>
                          {`With a down payment as low as 3%`}
                        </Details15>
                      </Frame51>
                    </Text5>
                  </Top3>
                  <Frame43>
                    <ButtonText2
                      variant="text"
                      size={"large"}
                      color={"primary"}
                      disabled={false}
                      data={data}
                    >
                      {"LEARN MORE"}
                    </ButtonText2>
                  </Frame43>
                </Details14>
              </Content3>
            </CardChoreo3>
          </CardRow1>
          <CardRow2>
            <CardChoreo4>
              <Content4>
                <Details16>
                  <Top4>
                    <Icon3>
                      <Vector3
                        src={Vector3Image}
                        loading="lazy"
                        alt={"Vector"}
                      />
                    </Icon3>
                    <Text6>
                      <TitleTop3>
                        <Title3>{`Find a credit card`}</Title3>
                      </TitleTop3>
                      <Frame52>
                        <Details17>
                          {`With a down payment as low as 3%`}
                        </Details17>
                      </Frame52>
                    </Text6>
                  </Top4>
                  <Frame44>
                    <ButtonText3
                      variant="text"
                      size={"large"}
                      color={"primary"}
                      disabled={false}
                      data={data}
                    >
                      {"LEARN MORE"}
                    </ButtonText3>
                  </Frame44>
                </Details16>
              </Content4>
            </CardChoreo4>
            <CardChoreo5>
              <Content5>
                <Details18>
                  <Top5>
                    <Icon4>
                      <Vector4
                        src={Vector4Image}
                        loading="lazy"
                        alt={"Vector"}
                      />
                    </Icon4>
                    <Text7>
                      <TitleTop4>
                        <Title4>{`Interest Rates`}</Title4>
                      </TitleTop4>
                      <Frame53>
                        <Details19>
                          {`Check the current interest rates`}
                        </Details19>
                      </Frame53>
                    </Text7>
                  </Top5>
                  <Frame45>
                    <ButtonText4
                      variant="text"
                      size={"large"}
                      color={"primary"}
                      disabled={false}
                      data={data}
                    >
                      {"Check rates"}
                    </ButtonText4>
                  </Frame45>
                </Details18>
              </Content5>
            </CardChoreo5>
          </CardRow2>
        </Cards2X2>
      )}
      {data.currentVariant === "ScreenMobile" && (
        <Cards1X4 data={data}>
          <CardChoreo6>
            <Content6>
              <Details20>
                <Top6>
                  <Icon5>
                    <Vector5 src={Vector5Image} loading="lazy" alt={"Vector"} />
                  </Icon5>
                  <Text8>
                    <TitleTop5>
                      <Title5>{`Find mortgage happiness`}</Title5>
                    </TitleTop5>
                    <Frame54>
                      <Details21>
                        {`With a down payment as low as 3%`}
                      </Details21>
                    </Frame54>
                  </Text8>
                </Top6>
                <Frame46>
                  <ButtonText5
                    variant="text"
                    size={"large"}
                    color={"primary"}
                    disabled={false}
                    data={data}
                  >
                    {"LEARN MORE"}
                  </ButtonText5>
                </Frame46>
              </Details20>
            </Content6>
          </CardChoreo6>
          <CardChoreo7>
            <Content7>
              <Details22>
                <Top7>
                  <Icon6>
                    <Vector6 src={Vector6Image} loading="lazy" alt={"Vector"} />
                  </Icon6>
                  <Text9>
                    <TitleTop6>
                      <Title6>{`Find the account that’s right for you`}</Title6>
                    </TitleTop6>
                    <Frame55>
                      <Details23>
                        {`With a down payment as low as 3%`}
                      </Details23>
                    </Frame55>
                  </Text9>
                </Top7>
                <Frame47>
                  <ButtonText6
                    variant="text"
                    size={"large"}
                    color={"primary"}
                    disabled={false}
                    data={data}
                  >
                    {"LEARN MORE"}
                  </ButtonText6>
                </Frame47>
              </Details22>
            </Content7>
          </CardChoreo7>
          <CardChoreo8>
            <Content8>
              <Details24>
                <Top8>
                  <Icon7>
                    <Vector7 src={Vector7Image} loading="lazy" alt={"Vector"} />
                  </Icon7>
                  <Text10>
                    <TitleTop7>
                      <Title7>{`Find a credit card`}</Title7>
                    </TitleTop7>
                    <Frame56>
                      <Details25>
                        {`With a down payment as low as 3%`}
                      </Details25>
                    </Frame56>
                  </Text10>
                </Top8>
                <Frame48>
                  <ButtonText7
                    variant="text"
                    size={"large"}
                    color={"primary"}
                    disabled={false}
                    data={data}
                  >
                    {"LEARN MORE"}
                  </ButtonText7>
                </Frame48>
              </Details24>
            </Content8>
          </CardChoreo8>
          <CardChoreo9>
            <Content9>
              <Details26>
                <Top9>
                  <Icon8>
                    <Vector8 src={Vector8Image} loading="lazy" alt={"Vector"} />
                  </Icon8>
                  <Text11>
                    <TitleTop8>
                      <Title8>{`Interest Rates`}</Title8>
                    </TitleTop8>
                    <Frame57>
                      <Details27>
                        {`Check the current interest rates`}
                      </Details27>
                    </Frame57>
                  </Text11>
                </Top9>
                <Frame49>
                  <ButtonText8
                    variant="text"
                    size={"large"}
                    color={"primary"}
                    disabled={false}
                    data={data}
                  >
                    {"Check rates"}
                  </ButtonText8>
                </Frame49>
              </Details26>
            </Content9>
          </CardChoreo9>
        </Cards1X4>
      )}
      <Footer11 />
    </ScreenDesktop>
  );
}

export default Q2Portal;
