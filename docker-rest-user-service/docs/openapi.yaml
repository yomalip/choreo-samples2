openapi: 3.0.1
info:
  title: Choreo User Store
  description: This is a sample service that manages a list of users
  contact: {}
  version: "1.0"
servers:
- url: http://localhost:8080/api/v1
paths:
  /users:
    get:
      tags:
      - users
      summary: List all the user store users
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/models.User'
    post:
      tags:
      - users
      summary: Add a new user to the user store
      requestBody:
        description: New user details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.User'
        required: true
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.User'
        "400":
          description: invalid user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ErrorResponse'
        "409":
          description: user already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ErrorResponse'
      x-codegen-request-body-name: request
  /users/{id}:
    get:
      tags:
      - users
      summary: Get user store user by id
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.User'
        "404":
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ErrorResponse'
    put:
      tags:
      - users
      summary: Update a user store user by id
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
      requestBody:
        description: Updated user details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/models.User'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.User'
        "400":
          description: invalid user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ErrorResponse'
        "404":
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ErrorResponse'
      x-codegen-request-body-name: request
    delete:
      tags:
      - users
      summary: Delete a user store user by id
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.User'
        "404":
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/utils.ErrorResponse'
components:
  schemas:
    models.User:
      type: object
      properties:
        age:
          type: integer
        id:
          type: string
          example: fe2594d0-ccea-42a2-97ac-0487458b5642
        location:
          type: string
        name:
          type: string
    utils.ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: error message
x-original-swagger-version: "2.0"
